[tool.poetry]
name = "droppablefileinput"
version = "0.0.1"
description = "DroppableFileInput is a custom Django widget that enhances the usability of file input forms by allowing users to drag and drop files. This widget utilizes JavaScript to provide interactive feedback, such as highlighting the drop area when a file is dragged over and displaying file details on the page."
authors = ["Krystof Beuermann <fkrystof@blackbox.ms>"]
repository = "https://github.com/blackbox-innovation/droppablefileinput"
documentation = "https://blackbox-innovation.github.io/droppablefileinput/"
readme = "README.md"
packages = [{ include = "droppablefileinput" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
django = "^5.0.6"
pytest-cov = "^5.0.0"
coverage = "^7.5.3"
pytest-django = "^4.8.0"
pytest-playwright = "^0.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
deptry = "^0.12.0"
pre-commit = "^3.4.0"
tox = "^4.11.1"
djlint = "^1.34.1"
ruff = "^0.4.4"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
DJANGO_SETTINGS_MODULE = "example.settings"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.format]
preview = true


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
